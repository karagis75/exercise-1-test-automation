
1.a )
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

class findduplicates{
  public static void main(String[] args) {
     
List<Integer> totalist = new ArrayList<Integer>();

List<Integer> listnoduplicates = new ArrayList<Integer>();

totalist.add(120);

totalist.add(120);

totalist.add(289);

totalist.add(350);

totalist.add(1000);

System.out.println("totallist"+totalist);

Set<Integer> listwithoutduplicates = new LinkedHashSet<Integer>(totalist);
 
 listnoduplicates.addAll(listwithoutduplicates);
 System.out.println("totallist"+listnoduplicates);
  }
}





Even number


1.b

import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

class Evennumber{
  public static void main(String[] args) {
     
  
List<Integer> totalist = new ArrayList<Integer>();

List<Integer> evennolist = new ArrayList<Integer>();

totalist.add(120);

totalist.add(123);

totalist.add(289);

totalist.add(350);

totalist.add(1000);

System.out.println("totallist"+totalist);

int length =  totalist.size();

 for (int i = 0 ; i<length ; i++) 
{ 

System.out.println("totallist"+totalist.get(i));
if ( totalist.get(i) % 2 == 0 )
{

evennolist.add( totalist.get(i));
 
  }
}
System.out.println("evennolist"+evennolist);
  }

  
}


Python 2
//Search for india word in any line for myfile
# Open the file in read mode 
text = open("myfile.txt", "r") 
  
# Create an empty dictionary 
d = dict() 
  
# Loop through each line of the file 
for line in text: 
    # Remove the leading spaces and newline character 
    line = line.strip() 
  
    # Convert the characters in line to  
    # lowercase to avoid case mismatch 
    line = line.lower() 
  
    # Split the line into words 
    words = line.split(" ") 
  
    # Iterate over each word in line 
    for word in words: 
        # Check if the word is already in dictionary 
        if word in d: 
            # Increment count of word by 1 
            d[word] = d[word] + 1
        else: 
            # Add the word to dictionary with count 1 
            d[word] = 1
  
# Print the contents of dictionary 
#for key in list(d.keys()): 
#  print(key, ":", d[key]) 


#Check the no of occurences of given string which is stored as key in dict    
print(d["india"])    
#close file
text.close()


Python 4

def checkKey(dict, key): 
      
    if dict.__contains__(key): 
        print ("Present, value =", dict[key]) 
    else: 
        print ("Not present")
  
# Driver Function 
dict = {'TN': 100, 'KA':200, 'KE':300} 
key = 'KA'
checkKey(dict, key) 



Question 4
import java.util.Hashtable;
import java.util.Enumeration;
import java.util.ArrayList;
import java.util.List;

public class Hashmember{
 
 public static void main(String[] args) {
 
   Enumeration names;
   String key;
 
   // Creating a Hashtable
   List<String> bg10 = new ArrayList<String>();
   Hashtable<String, Integer> hashtable = 
              new Hashtable<String, Integer>();
 
   // Adding member id and book count pairs to Hashtable
   hashtable.put("100",70);
   hashtable.put("101",5);
   hashtable.put("102",9 );
   hashtable.put("103",100);
   hashtable.put("104",1);
 
   names = hashtable.keys();
   while(names.hasMoreElements()) {
      key = (String) names.nextElement();
       System.out.println("Key: " +key+ " & Value: " +
      hashtable.get(key));
      if( hashtable.get(key)>10) 
      {
     bg10.add(key);

      }
     System.out.println(bg10);
      }
   }
 }



Question 5
import java.util.StringTokenizer;
 
public class removeunnecessaryspaces {
    public static void main(String a[]){
        String str = "My    name  Karthikeyan";
        StringTokenizer st = new StringTokenizer(str, " ");
        StringBuffer sb = new StringBuffer();
        while(st.hasMoreElements()){
            sb.append(st.nextElement()).append(" ");
        }
        System.out.println(sb.toString().trim());
    }
}

6a  1
b -not clear

7  
import xml.etree.cElementTree as et
import pandas as pd
 
def getvalueofnode(node):
    """ return node text or None """
    return node.text if node is not None else None
 
 
def xmlmain():
    """ main """
    parsed_xml = et.parse("test.xml")
    dfcols = ['name', 'email', 'phone', 'street']
    df_xml = pd.DataFrame(columns=dfcols)
 
    for node in parsed_xml.getroot():
        name = node.attrib.get('name')
        email = node.find('email')
        phone = node.find('phone')
        street = node.find('address/street')
 
        df_xml = df_xml.append(
            pd.Series([name, getvalueofnode(email), getvalueofnode(phone),
                       getvalueofnode(street)], index=dfcols),
            ignore_index=True)
 
   # print (df_xml)
 




def isdmain():
    """ isd main """
    parsed_xml = et.parse("testisd.xml")
    dfcols = ['name', 'email', 'phone', 'street']
    df_xml_isd = pd.DataFrame(columns=dfcols)
 
    for node in parsed_xml.getroot():
        name2 = node.attrib.get('name')
        email2 = node.find('email')
        phone2 = node.find('phone')
        street2 = node.find('address/street')
 
        df_xml_isd =  df_xml_isd.append(
            pd.Series([name2, getvalueofnode(email2), getvalueofnode(phone2),
                       getvalueofnode(street2)], index=dfcols),
            ignore_index=True)
 
  
    xmlmain() -call xml main to create xml dataframe
    isdmain() -call isd main to create xml dataframe

df_xml['name2'] = df_xml_isd['name2'] #add the name column from ISD dataframe to XML dataframe

df_xml['namesMatch?'] = np.where(df_xml['name'] == df_xml_isd['name2'], 'True', 'False')  #create new column in df_xml to check if column match

df_xml['email2'] = df_xml_isd['email2'] #add the name column from ISD dataframe to XML dataframe

df_xml['emailMatch?'] = np.where(df_xml['email'] == df_xml_isd['email2'], 'True', 'False')  #create new column in df_xml to check if column match
df_xml['phone2'] = df_xml_isd['phone2'] #add the name column from ISD dataframe to XML dataframe

df_xml['phoneMatch?'] = np.where(df_xml['phone'] == df_xml_isd['phone2'], 'True', 'False')  #create new column in df_xml to check if column match

df_xml['street2'] = df_xml_isd['street2'] #add the name column from ISD dataframe to XML dataframe

df_xml['streetMatch?'] = np.where(df_xml['Street'] == df_xml_isd['street2'], 'True', 'False')  #create new column in df_xml to check if column match

print (df_xml)

8
d = [{"1": [{"a":"test","b":"yes"}]},{"2":[{"c":"testing","d":"yes"}]},{"3":[{"e":"testing","f":"yes"}]}]
def findkeys(node, kv):
    if isinstance(node, list):
        for i in node:
            for x in findkeys(i, kv):
                yield x
    elif isinstance(node, dict):
        if kv in node:
            yield node[kv]
        for j in node.values():
            for x in findkeys(j, kv):
                yield x

print(list(findkeys(d, 'a')))
print(list(findkeys(d, 'b')))
print(list(findkeys(d, 'c')))
print(list(findkeys(d, 'd')))
print(list(findkeys(d, 'f')))

9
select Emp Id, Quantity, date,rank() OVER PARTITION BY QUANTITY order by quantity) rnk from sales inner join employee where sales.emp_id=employee.emp_id and country in (select country from country where continent='ASIA') AND Quantity>1000

